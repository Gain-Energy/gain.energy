import { useEffect, useRef, useState } from 'react';
import { gsap } from 'gsap';
import ScrollTrigger from 'gsap/ScrollTrigger';
import * as S from './style';

import products from '../../data/products';

gsap.registerPlugin(ScrollTrigger);

function ContentMobile() {
    const contentRef = useRef(null)
    const advantagesRef = useRef(null)
    const [activeContent, setActiveContent] = useState('cloud')

    useEffect(() => {
        setTimeout(() => {
            ScrollTrigger.refresh();
        }, 500)
    }, [])

    useEffect(() => {
        const handleResize = () => {
            ScrollTrigger.refresh();
        };
    
        window.addEventListener('resize', handleResize)
    
        return () => {
            window.removeEventListener('resize', handleResize)
        }
    }, [])

    useEffect(() => {
        gsap.fromTo(
            contentRef.current,
            {
                opacity: 0,
                y: '20%' 
            }, 
            {
                opacity: 1, 
                y: '0%', 
                duration: 1, 
                ease: 'power2.out',
                scrollTrigger: {
                    trigger: contentRef.current,
                    start: 'top-=30% 50%', 
                    toggleActions: 'play none none none', 
                    // markers: true
                },
            }
        )
    }, [])

    function handleClick(tab) {
        if (tab !== activeContent) {
            gsap.to(advantagesRef.current, {
                opacity: 0,
                duration: 0.2,
                onComplete: () => {
                    setActiveContent(tab)
                    gsap.to(advantagesRef.current, {
                    opacity: 1,
                    duration: 0.2,
                    })
                },
            })
        }
    }

    return (
        <S.ContentMobile ref={contentRef}>
            <S.HeadlinesBlock>
                <S.ContentHeadline 
                    isActive={activeContent === 'cloud' ? true : false}
                    onClick={() => handleClick('cloud')}
                >
                    <S.Logo width="143" height="42" viewBox="0 0 143 42" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M79.182 30.0286H76.9327V20.1769L73.6735 30.0286H70.6102L67.3507 20.1769V30.0286H65.1014V18.0898H68.8386L72.1508 28.2082L75.4451 18.0898H79.182V30.0286ZM89.0715 25.4368L86.9468 19.7763L84.8394 25.4368H89.0715ZM89.7803 27.3235H84.1306L83.1211 30.0286H80.6947L85.4409 18.0898H88.4877L93.2162 30.0286H90.7901L89.7803 27.3235ZM0 27.9752V18.0898H2.26761V27.6239C2.26761 27.7915 2.30268 27.9078 2.37395 27.9752C2.44437 28.0417 2.56211 28.0751 2.72832 28.0751H7.72226C7.88733 28.0751 8.00535 28.0417 8.07663 27.9752C8.14704 27.9078 8.18268 27.7915 8.18268 27.6239V18.0898H10.4494V27.9752C10.4494 28.5423 10.2604 29.0264 9.88296 29.4278C9.5055 29.8284 8.95613 30.0286 8.23599 30.0286H2.21459C1.49445 30.0286 0.945077 29.8284 0.566761 29.4278C0.1893 29.0264 0 28.5423 0 27.9752ZM20.0718 23.9505C20.2369 23.9505 20.3546 23.9177 20.4259 23.8503C20.4963 23.7838 20.532 23.6674 20.532 23.5001V20.511C20.532 20.3336 20.4963 20.2106 20.4259 20.1441C20.3546 20.0767 20.2252 20.0441 20.0359 20.0441H14.7232V23.9505H20.0718ZM12.4556 18.0898H20.4607C21.2168 18.0898 21.7949 18.29 22.1966 18.6914C22.598 19.092 22.7987 19.5762 22.7987 20.1441V23.8503C22.7987 24.4182 22.6097 24.9023 22.2323 25.3029C21.8548 25.7044 21.3054 25.9045 20.5853 25.9045H14.7232V30.0286H12.4556V18.0898ZM25.0204 28.0751H31.8737C32.063 28.0751 32.1925 28.0417 32.2637 27.9752C32.3342 27.9078 32.3701 27.7857 32.3701 27.6075V25.3867C32.3701 25.0636 32.205 24.9023 31.8737 24.9023H26.7909C26.0707 24.9023 25.5213 24.7022 25.1439 24.3018C24.7664 23.9004 24.5771 23.4163 24.5771 22.8492V20.1441C24.5771 19.5762 24.7781 19.092 25.1795 18.6914C25.5812 18.29 26.1597 18.0898 26.9154 18.0898H34.1231V20.0441H27.3402C27.0089 20.0441 26.8439 20.1997 26.8439 20.511V22.5151C26.8439 22.6816 26.8798 22.7991 26.9502 22.8656C27.0218 22.9319 27.1395 22.9658 27.3046 22.9658H32.3342C33.0663 22.9658 33.6328 23.166 34.0344 23.5663C34.4361 23.9678 34.6368 24.4519 34.6368 25.0198V27.9752C34.6368 28.5541 34.4447 29.0409 34.0615 29.4361C33.6772 29.8309 33.1076 30.0286 32.3516 30.0286H25.0204V28.0751ZM40.5114 20.0441H36.5261V18.0898H46.7635V20.0441H42.7782V30.0286H40.5114V20.0441ZM56.7568 20.511C56.7568 20.3336 56.7211 20.2106 56.6504 20.1441C56.58 20.0767 56.4497 20.0441 56.2604 20.0441H50.9478V23.4836H56.2963C56.4614 23.4836 56.58 23.45 56.6504 23.3834C56.7211 23.3161 56.7568 23.1997 56.7568 23.0321V20.511ZM56.8098 25.4368H56.438L58.9887 30.0286H56.4911L53.9763 25.4368H50.9478V30.0286H48.7158V18.0898H56.6861C57.4413 18.0898 58.0203 18.29 58.4211 18.6914C58.8228 19.092 59.0235 19.5762 59.0235 20.1441V23.3834C59.0235 23.9505 58.8351 24.4346 58.4568 24.8361C58.0793 25.2367 57.5299 25.4368 56.8098 25.4368ZM60.7774 18.0898H63.045V30.0286H60.7774V18.0898Z" fill="#F9F6EF"/>
                        <path fillRule="evenodd" clipRule="evenodd" d="M124.335 0C109.458 45.4879 91.582 37.7978 97.4875 6.01353H105.669C84.4508 56.1021 123.606 53.6307 143 0H124.335Z" fill="url(#paint0_linear_532_2449)"/>
                        <defs>
                        <linearGradient id="paint0_linear_532_2449" x1="96.3301" y1="41.9666" x2="96.3301" y2="0" gradientUnits="userSpaceOnUse">
                        <stop stopColor="#00AAFF"/>
                        <stop offset="0.5" stopColor="#1DD59F"/>
                        <stop offset="1" stopColor="#39FF3F"/>
                        </linearGradient>
                        </defs>
                    </S.Logo>
                    Cloud
                </S.ContentHeadline>
                <S.ContentHeadline 
                    isActive={activeContent === 'enterprise' ? true : false}
                    onClick={() => handleClick('enterprise')}
                >
                    <S.Logo width="143" height="42" viewBox="0 0 143 42" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M79.182 30.0286H76.9327V20.1769L73.6735 30.0286H70.6102L67.3507 20.1769V30.0286H65.1014V18.0898H68.8386L72.1508 28.2082L75.4451 18.0898H79.182V30.0286ZM89.0715 25.4368L86.9468 19.7763L84.8394 25.4368H89.0715ZM89.7803 27.3235H84.1306L83.1211 30.0286H80.6947L85.4409 18.0898H88.4877L93.2162 30.0286H90.7901L89.7803 27.3235ZM0 27.9752V18.0898H2.26761V27.6239C2.26761 27.7915 2.30268 27.9078 2.37395 27.9752C2.44437 28.0417 2.56211 28.0751 2.72832 28.0751H7.72226C7.88733 28.0751 8.00535 28.0417 8.07663 27.9752C8.14704 27.9078 8.18268 27.7915 8.18268 27.6239V18.0898H10.4494V27.9752C10.4494 28.5423 10.2604 29.0264 9.88296 29.4278C9.5055 29.8284 8.95613 30.0286 8.23599 30.0286H2.21459C1.49445 30.0286 0.945077 29.8284 0.566761 29.4278C0.1893 29.0264 0 28.5423 0 27.9752ZM20.0718 23.9505C20.2369 23.9505 20.3546 23.9177 20.4259 23.8503C20.4963 23.7838 20.532 23.6674 20.532 23.5001V20.511C20.532 20.3336 20.4963 20.2106 20.4259 20.1441C20.3546 20.0767 20.2252 20.0441 20.0359 20.0441H14.7232V23.9505H20.0718ZM12.4556 18.0898H20.4607C21.2168 18.0898 21.7949 18.29 22.1966 18.6914C22.598 19.092 22.7987 19.5762 22.7987 20.1441V23.8503C22.7987 24.4182 22.6097 24.9023 22.2323 25.3029C21.8548 25.7044 21.3054 25.9045 20.5853 25.9045H14.7232V30.0286H12.4556V18.0898ZM25.0204 28.0751H31.8737C32.063 28.0751 32.1925 28.0417 32.2637 27.9752C32.3342 27.9078 32.3701 27.7857 32.3701 27.6075V25.3867C32.3701 25.0636 32.205 24.9023 31.8737 24.9023H26.7909C26.0707 24.9023 25.5213 24.7022 25.1439 24.3018C24.7664 23.9004 24.5771 23.4163 24.5771 22.8492V20.1441C24.5771 19.5762 24.7781 19.092 25.1795 18.6914C25.5812 18.29 26.1597 18.0898 26.9154 18.0898H34.1231V20.0441H27.3402C27.0089 20.0441 26.8439 20.1997 26.8439 20.511V22.5151C26.8439 22.6816 26.8798 22.7991 26.9502 22.8656C27.0218 22.9319 27.1395 22.9658 27.3046 22.9658H32.3342C33.0663 22.9658 33.6328 23.166 34.0344 23.5663C34.4361 23.9678 34.6368 24.4519 34.6368 25.0198V27.9752C34.6368 28.5541 34.4447 29.0409 34.0615 29.4361C33.6772 29.8309 33.1076 30.0286 32.3516 30.0286H25.0204V28.0751ZM40.5114 20.0441H36.5261V18.0898H46.7635V20.0441H42.7782V30.0286H40.5114V20.0441ZM56.7568 20.511C56.7568 20.3336 56.7211 20.2106 56.6504 20.1441C56.58 20.0767 56.4497 20.0441 56.2604 20.0441H50.9478V23.4836H56.2963C56.4614 23.4836 56.58 23.45 56.6504 23.3834C56.7211 23.3161 56.7568 23.1997 56.7568 23.0321V20.511ZM56.8098 25.4368H56.438L58.9887 30.0286H56.4911L53.9763 25.4368H50.9478V30.0286H48.7158V18.0898H56.6861C57.4413 18.0898 58.0203 18.29 58.4211 18.6914C58.8228 19.092 59.0235 19.5762 59.0235 20.1441V23.3834C59.0235 23.9505 58.8351 24.4346 58.4568 24.8361C58.0793 25.2367 57.5299 25.4368 56.8098 25.4368ZM60.7774 18.0898H63.045V30.0286H60.7774V18.0898Z" fill="#F9F6EF"/>
                        <path fillRule="evenodd" clipRule="evenodd" d="M124.335 0C109.458 45.4879 91.582 37.7978 97.4875 6.01353H105.669C84.4508 56.1021 123.606 53.6307 143 0H124.335Z" fill="url(#paint0_linear_532_2449)"/>
                        <defs>
                        <linearGradient id="paint0_linear_532_2449" x1="96.3301" y1="41.9666" x2="96.3301" y2="0" gradientUnits="userSpaceOnUse">
                        <stop stopColor="#00AAFF"/>
                        <stop offset="0.5" stopColor="#1DD59F"/>
                        <stop offset="1" stopColor="#39FF3F"/>
                        </linearGradient>
                        </defs>
                    </S.Logo>
                    Enterprise
                </S.ContentHeadline>
            </S.HeadlinesBlock>
            <S.DividingLineBlockMobile>
                <S.DividingLine/>
            </S.DividingLineBlockMobile>
            <S.ContentRight>
                <S.Advantages ref={advantagesRef}>
                    <S.KeyBenefits>
                        <S.AdvantagesTitle>Key Benefits</S.AdvantagesTitle>
                        <S.AdvantagesList>
                            {products[activeContent].benefits.map((item, index) => (
                                <li key={index}>{item}</li>
                            ))}
                        </S.AdvantagesList>
                    </S.KeyBenefits>
                    <S.PerfectFor>
                        <S.AdvantagesTitle>Perfect For</S.AdvantagesTitle>
                        <S.AdvantagesList>
                            {products[activeContent].perfect.map((item, index) => (
                                <li key={index}>{item}</li>
                            ))}
                        </S.AdvantagesList>
                    </S.PerfectFor>
                </S.Advantages>
                <S.AdvantagesDescription>
                    {products[activeContent].description}
                </S.AdvantagesDescription>
            </S.ContentRight>
        </S.ContentMobile>
    )
}

export default ContentMobile;